<?phpconst ROOT = __DIR__;$config = file_get_contents(__DIR__ . "/config.json");$config = json_decode($config, true);$hostname = $config['database']['hostname'];$port = $config['database']['port'];$database = $config['database']['database'];$user = $config['database']['user'];$password = $config['database']['password'];function controller ($name): void{    require_once(__DIR__ . "/controllers/$name.php");}function view ($name, $data = []): void{    extract($data);    require_once(__DIR__ . "/views/$name.php");}function partial ($name): void{    require_once(__DIR__ . "/html_partials/$name.html.php");}function redirect($page): void{    header('Location: ' .$page);    die();}function bdd_connection(): PDO{    global $hostname, $port, $database, $user, $password;    return new PDO("mysql:host=$hostname;port=$port;dbname=$database", $user, $password, array(PDO::MYSQL_ATTR_INIT_COMMAND => 'SET NAMES utf8'));}function printInfo($sMsg): void{    echo '<div class="alert info"><i class="uil uil-times alert__close" id="nav-close"></i><strong>Info : </strong> '.$sMsg.'</div>';    // echo '<div class="alert alert-info"><strong>Info : </strong>'.$sMsg.'</div>';}function printSuccess($sMsg): void{    echo '<div class="alert success"><i class="uil uil-times alert__close" id="nav-close"></i><strong>Succès : </strong> '.$sMsg.'</div>';    // echo '<div class="alert alert-success"><strong>Succès : </strong>'.$sMsg.'</div>';}function printWarning($sMsg): void{    echo '<div class="alert warning"><i class="uil uil-times alert__close" id="nav-close"></i><strong>Attention : </strong> '.$sMsg.'</div>';    // echo '<div class="alert alert-warning"><strong>Attention : </strong>'.$sMsg.'</div>';}function printError($sMsg): void{    echo '<div class="alert"><i class="uil uil-times alert__close" id="nav-close"></i><strong>Erreur : </strong> '.$sMsg.'</div>';    // echo '<div class="alert alert-danger"><strong>Erreur : </strong>'.$sMsg.'</div>';}function filter_string_polyfill(string $string): string{    $str = preg_replace('/\x00|<[^>]*>?/', '', $string);    return str_replace(["'", '"'], ['&#39;', '&#34;'], $str);}function capitalize(string $string): string{    if (str_contains($string, '-')) {        $string = strtolower($string);        $strArray = explode('-', $string);        $strArray = array_map(fn($str) => ucfirst($str), $strArray);        return implode('-', $strArray);    }    return ucfirst($string);}// Regexfunction valid_name(string $name): bool|int{    return preg_match('/^[a-zA-Z\-]{3,16}$/', $name);}function valid_username(string $username): bool|int{    return preg_match('/^\w{3,24}$/', $username);}function valid_email(string $email) {    return filter_var($email, FILTER_VALIDATE_EMAIL);//    '/^(?!(?:(?:\x22?\x5C[\x00-\x7E]\x22?)|(?:\x22?[^\x5C\x22]\x22?)){255,})(?!(?:(?:\x22?\x5C[\x00-\x7E]\x22?)|(?:\x22?[^\x5C\x22]\x22?)){65,}@)(?:(?:[\x21\x23-\x27\x2A\x2B\x2D\x2F-\x39\x3D\x3F\x5E-\x7E]+)|(?:\x22(?:[\x01-\x08\x0B\x0C\x0E-\x1F\x21\x23-\x5B\x5D-\x7F]|(?:\x5C[\x00-\x7F]))*\x22))(?:\.(?:(?:[\x21\x23-\x27\x2A\x2B\x2D\x2F-\x39\x3D\x3F\x5E-\x7E]+)|(?:\x22(?:[\x01-\x08\x0B\x0C\x0E-\x1F\x21\x23-\x5B\x5D-\x7F]|(?:\x5C[\x00-\x7F]))*\x22)))*@(?:(?:(?!.*[^.]{64,})(?:(?:(?:xn--)?[a-z0-9]+(?:-[a-z0-9]+)*\.){1,126}){1,}(?:(?:[a-z][a-z0-9]*)|(?:(?:xn--)[a-z0-9]+))(?:-[a-z0-9]+)*)|(?:\[(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){7})|(?:(?!(?:.*[a-f0-9][:\]]){7,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?)))|(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){5}:)|(?:(?!(?:.*[a-f0-9]:){5,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3}:)?)))?(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))(?:\.(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))){3}))\]))$/iD'}function valid_phone(string $phone): bool|int{    return preg_match('/^\+?\d{6,16}$/', $phone);}function valid_password(string $password): bool|int{    return preg_match('/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/', $password);}function valid_date(string $date): bool|int{    return preg_match('/^[0-9]{4}-(((0[13578]|(10|12))-(0[1-9]|[1-2][0-9]|3[0-1]))|(02-(0[1-9]|[1-2][0-9]))|((0[469]|11)-(0[1-9]|[1-2][0-9]|30)))$/', $date);}function valid_url(string $url): bool|int{    return preg_match('/^(https?:\/\/)?([\da-z.-]+)\.([a-z.]{2,6})([\/\w .-]*)*\/?$/', $url);}// Get functionsfunction getString($sN){    $str = filter_input(INPUT_GET, $sN, FILTER_UNSAFE_RAW, FILTER_NULL_ON_FAILURE|FILTER_FLAG_NO_ENCODE_QUOTES);    return filter_string_polyfill($str);}function get($sN) {    return filter_input(INPUT_GET, $sN,FILTER_DEFAULT, FILTER_NULL_ON_FAILURE|FILTER_FLAG_NO_ENCODE_QUOTES);}function getFloat($sN) {    return filter_input(INPUT_GET, $sN,FILTER_VALIDATE_FLOAT, FILTER_NULL_ON_FAILURE);}function getInt($sN) {    return filter_input(INPUT_GET, $sN,FILTER_VALIDATE_INT, FILTER_NULL_ON_FAILURE);}function getArray($sN) {    return filter_input(INPUT_GET, $sN, FILTER_DEFAULT, FILTER_REQUIRE_ARRAY);}// Post functionsfunction postString($sN){    $str = filter_input(INPUT_POST, $sN, FILTER_UNSAFE_RAW, FILTER_NULL_ON_FAILURE|FILTER_FLAG_NO_ENCODE_QUOTES);    return filter_string_polyfill($str);}function post($sN) {    return filter_input(INPUT_POST, $sN,FILTER_DEFAULT,FILTER_NULL_ON_FAILURE|FILTER_FLAG_NO_ENCODE_QUOTES);}function postInt($sN) {    return filter_input(INPUT_POST, $sN,FILTER_VALIDATE_INT,FILTER_NULL_ON_FAILURE);}function postFloat($sN) {    return filter_input(INPUT_POST, $sN,FILTER_VALIDATE_FLOAT, FILTER_NULL_ON_FAILURE);}function postArray($sN) {    return filter_input(INPUT_POST, $sN, FILTER_DEFAULT, FILTER_REQUIRE_ARRAY);}// Other functionsfunction getIP() {    return filter_input(INPUT_SERVER,'REMOTE_ADDR');}function printDay($sTime=null) {    if ($sTime === null) {        $sTime=time();    }    $aNameMonths[1] = 'janvier';    $aNameMonths[2] = 'février';    $aNameMonths[3] = 'mars';    $aNameMonths[4] = 'avril';    $aNameMonths[5] = 'mai';    $aNameMonths[6] = 'juin';    $aNameMonths[7] = 'juillet';    $aNameMonths[8] = 'août';    $aNameMonths[9] = 'septembre';    $aNameMonths[10] = 'octobre';    $aNameMonths[11] = 'novembre';    $aNameMonths[12] = 'décembre';    $aDays[0] = 'dimanche';    $aDays[1] = 'lundi';    $aDays[2] = 'mardi';    $aDays[3] = 'mercredi';    $aDays[4] = 'jeudi';    $aDays[5] = 'vendredi';    $aDays[6] = 'samedi';    return date('h:i:s',$sTime).' le '.$aDays[date('w',$sTime)].', '.date('d',$sTime).' '.$aNameMonths[date('n',$sTime)].' '.date('Y',$sTime);}